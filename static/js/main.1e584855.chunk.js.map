{"version":3,"sources":["rockPaperScissors/play/switch.js","rockPaperScissors/main.js","rockPaperScissors/aside.js","rockPaperScissors/result/yourChoose.js","rockPaperScissors/result/botChoose.js","rockPaperScissors/result/result.js","rockPaperScissors/roundTitle.js","rockPaperScissors/result/resultTitle.js","rockPaperScissors/rockPaperScissors.js","rockPaperScissors/reset.js","App.js","index.js"],"names":["Switch","type","game","setGame","setPlays","random","Math","floor","choosen","bot","result","round","successful","draw","defeat","library","add","faHandRock","faHandPaper","faHandScissors","Main","className","to","onClick","icon","transform","rotate","size","Aside","YourChoose","plays","BotChoose","Result","RoundTitle","ResultTitle","faHome","RockPaperScissors","useState","href","path","reset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e584855.chunk.js","sourcesContent":["export const Switch = ({ game, setGame, setPlays }, type) => {\r\n  let random = Math.floor(Math.random() * (0 + 3))\r\n  switch (type) {\r\n    case \"rock\":\r\n      if (random === 0) {\r\n        setPlays({\r\n          choosen: \"rock\",\r\n          bot: \"rock\",\r\n          result: \"draw\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw + 1,\r\n          defeat: game.defeat,\r\n        })\r\n      } else if (random === 1) {\r\n        setPlays({\r\n          choosen: \"rock\",\r\n          bot: \"paper\",\r\n          result: \"defeat\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw,\r\n          defeat: game.defeat + 1,\r\n        })\r\n      } else if (random === 2) {\r\n        setPlays({\r\n          choosen: \"rock\",\r\n          bot: \"scissors\",\r\n          result: \"successful\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful + 1,\r\n          draw: game.draw,\r\n          defeat: game.defeat,\r\n        })\r\n      }\r\n      break\r\n    case \"scissors\":\r\n      if (random === 2) {\r\n        setPlays({\r\n          choosen: \"scissors\",\r\n          bot: \"scissors\",\r\n          result: \"draw\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw + 1,\r\n          defeat: game.defeat,\r\n        })\r\n      } else if (random === 0) {\r\n        setPlays({\r\n          choosen: \"scissors\",\r\n          bot: \"rock\",\r\n          result: \"defeat\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw,\r\n          defeat: game.defeat + 1,\r\n        })\r\n      } else if (random === 1) {\r\n        setPlays({\r\n          choosen: \"scissors\",\r\n          bot: \"paper\",\r\n          result: \"successful\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful + 1,\r\n          draw: game.draw,\r\n          defeat: game.defeat,\r\n        })\r\n      }\r\n      break\r\n    case \"paper\":\r\n      if (random === 1) {\r\n        setPlays({\r\n          choosen: \"paper\",\r\n          bot: \"paper\",\r\n          result: \"draw\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw + 1,\r\n          defeat: game.defeat,\r\n        })\r\n      } else if (random === 2) {\r\n        setPlays({\r\n          choosen: \"paper\",\r\n          bot: \"scissors\",\r\n          result: \"defeat\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful,\r\n          draw: game.draw,\r\n          defeat: game.defeat + 1,\r\n        })\r\n      } else if (random === 0) {\r\n        setPlays({\r\n          choosen: \"paper\",\r\n          bot: \"rock\",\r\n          result: \"successful\",\r\n        })\r\n        setGame({\r\n          round: game.round + 1,\r\n          successful: game.successful + 1,\r\n          draw: game.draw,\r\n          defeat: game.defeat,\r\n        })\r\n      }\r\n      break\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport { Link } from \"@reach/router\"\r\nimport { faHandRock, faHandPaper, faHandScissors } from \"@fortawesome/free-solid-svg-icons\"\r\nimport { Switch } from \"./play/switch.js\"\r\nlibrary.add(faHandRock, faHandPaper, faHandScissors)\r\n\r\nexport const Main = ({ game, setGame, setPlays }) => {\r\n  return (\r\n    <main className='Game'>\r\n      <Link to='/result'>\r\n        <div\r\n          onClick={() => {\r\n            Switch({ game, setGame, setPlays }, \"rock\")\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-rock\"]} transform={{ rotate: -90 }} size='6x' />\r\n          <p>Rock</p>\r\n        </div>\r\n      </Link>\r\n      <Link to='/result'>\r\n        <div\r\n          onClick={() => {\r\n            Switch({ game, setGame, setPlays }, \"paper\")\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-paper\"]} transform={{ rotate: -90 }} size='6x' />\r\n          <p>Paper</p>\r\n        </div>\r\n      </Link>\r\n      <Link to='/result'>\r\n        <div\r\n          onClick={() => {\r\n            Switch({ game, setGame, setPlays }, \"scissors\")\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-scissors\"]} size='6x' />\r\n          <p>Scissors</p>\r\n        </div>\r\n      </Link>\r\n    </main>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const Aside = ({ successful, draw, defeat }) => {\r\n  return (\r\n    <aside className='Result--table'>\r\n      <p>\r\n        Successful: <br />\r\n        <span>{successful}</span>\r\n      </p>\r\n      <p>\r\n        Draw: <br />\r\n        <span>{draw}</span>\r\n      </p>\r\n      <p>\r\n        Defeat: <br />\r\n        <span>{defeat}</span>\r\n      </p>\r\n    </aside>\r\n  )\r\n}\r\n","import React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport { faHandRock, faHandPaper, faHandScissors } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nlibrary.add(faHandRock, faHandPaper, faHandScissors)\r\n\r\nexport const YourChoose = ({ plays }) => {\r\n  switch (plays.choosen) {\r\n    case \"rock\":\r\n      switch (plays.result) {\r\n        case \"draw\":\r\n          return (\r\n            <div className='Draw'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-rock\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Rock</p>\r\n            </div>\r\n          )\r\n        case \"defeat\":\r\n          return (\r\n            <div className='Defeat'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-rock\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Rock</p>\r\n            </div>\r\n          )\r\n        case \"successful\":\r\n          return (\r\n            <div className='Successful'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-rock\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Rock</p>\r\n            </div>\r\n          )\r\n        default:\r\n          break\r\n      }\r\n      break\r\n    case \"paper\":\r\n      switch (plays.result) {\r\n        case \"draw\":\r\n          return (\r\n            <div className='Draw'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-paper\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Paper</p>\r\n            </div>\r\n          )\r\n        case \"defeat\":\r\n          return (\r\n            <div className='Defeat'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-paper\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Paper</p>\r\n            </div>\r\n          )\r\n        case \"successful\":\r\n          return (\r\n            <div className='Successful'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-paper\"]} transform={{ rotate: -90 }} size='6x' />\r\n              <p>Paper</p>\r\n            </div>\r\n          )\r\n        default:\r\n          break\r\n      }\r\n      break\r\n    case \"scissors\":\r\n      switch (plays.result) {\r\n        case \"draw\":\r\n          return (\r\n            <div className='Draw'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-scissors\"]} size='6x' />\r\n              <p>Scissors</p>\r\n            </div>\r\n          )\r\n        case \"defeat\":\r\n          return (\r\n            <div className='Defeat'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-scissors\"]} size='6x' />\r\n              <p>Scissors</p>\r\n            </div>\r\n          )\r\n        case \"successful\":\r\n          return (\r\n            <div className='Successful'>\r\n              <FontAwesomeIcon icon={[\"fas\", \"hand-scissors\"]} size='6x' />\r\n              <p>Scissors</p>\r\n            </div>\r\n          )\r\n        default:\r\n          break\r\n      }\r\n      break\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport { faHandRock, faHandPaper, faHandScissors } from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nlibrary.add(faHandRock, faHandPaper, faHandScissors)\r\n\r\nexport const BotChoose = ({ plays }) => {\r\n  switch (plays.bot) {\r\n    case \"rock\":\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-rock\"]} transform={{ rotate: -90 }} size='6x' />\r\n          <p>Rock</p>\r\n        </div>\r\n      )\r\n\r\n    case \"paper\":\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-paper\"]} transform={{ rotate: -90 }} size='6x' />\r\n          <p>Paper</p>\r\n        </div>\r\n      )\r\n\r\n    case \"scissors\":\r\n      return (\r\n        <div>\r\n          <FontAwesomeIcon icon={[\"fas\", \"hand-scissors\"]} size='6x' />\r\n          <p>Scissors</p>\r\n        </div>\r\n      )\r\n\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"@reach/router\"\r\nimport { YourChoose } from \"./yourChoose\"\r\nimport { BotChoose } from \"./botChoose\"\r\n\r\nexport const Result = ({ plays }) => {\r\n  return (\r\n    <div className='Result'>\r\n      <div>\r\n        <YourChoose className='YourChoose' plays={plays} />\r\n        <BotChoose plays={plays} />\r\n      </div>\r\n      <Link to='/'>\r\n        <aside>\r\n          <p>Play again</p>\r\n        </aside>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const RoundTitle = ({ game }) => {\r\n  return (\r\n    <div className='Round'>\r\n      <h2>Rock, Paper, Scissors</h2>\r\n      <p>Round {\" \" + game.round}, select the symbol </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const ResultTitle = ({ plays }) => {\r\n  switch (plays.result) {\r\n    case \"successful\":\r\n      return (\r\n        <div>\r\n          <h2>You win ;)</h2>\r\n          <p>Play again!</p>\r\n        </div>\r\n      )\r\n    case \"draw\":\r\n      return (\r\n        <div>\r\n          <h2>Draw :O</h2>\r\n          <p>Play again!</p>\r\n        </div>\r\n      )\r\n    case \"defeat\":\r\n      return (\r\n        <div>\r\n          <h2>You lose :(</h2>\r\n          <p>Play again!</p>\r\n        </div>\r\n      )\r\n    default:\r\n      break\r\n  }\r\n}\r\n","import React, { useState } from \"react\"\r\nimport { Router, Link } from \"@reach/router\"\r\nimport { Main } from \"./main\"\r\nimport { Aside } from \"./aside\"\r\nimport { reset } from \"./reset\"\r\nimport { Result } from \"./result/result\"\r\nimport { RoundTitle } from \"./roundTitle\"\r\nimport { ResultTitle } from \"./result/resultTitle\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\"\r\nlibrary.add(faHome)\r\n\r\nexport const RockPaperScissors = () => {\r\n  const [plays, setPlays] = useState({\r\n    choosen: \"\",\r\n    bot: \"\",\r\n    result: \"\",\r\n  })\r\n  const [game, setGame] = useState({\r\n    round: 0,\r\n    successful: 0,\r\n    draw: 0,\r\n    defeat: 0,\r\n  })\r\n\r\n  return (\r\n    <div className='container'>\r\n      <a href='https://wilk6.github.io' className='Back'>\r\n        <FontAwesomeIcon icon={[\"fas\", \"home\"]} size='3x' />\r\n      </a>\r\n      <Router className='Title'>\r\n        <RoundTitle path='/' game={game} />\r\n        <ResultTitle path='/result' plays={plays} />\r\n      </Router>\r\n      <Router className='Main'>\r\n        <Main path='/' game={game} setGame={setGame} setPlays={setPlays} />\r\n        <Result path='/result' plays={plays} />\r\n      </Router>\r\n      <Aside successful={game.successful} draw={game.draw} defeat={game.defeat} />\r\n      <footer className='Reset'>\r\n        <Link to='/'>\r\n          <p onClick={() => reset({ game, setGame })}>Reset results</p>\r\n        </Link>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n","export const reset = ({ game, setGame }) => {\r\n  setGame({ round: 0, successful: 0, draw: 0, defeat: 0 })\r\n}\r\n","import React from 'react';\nimport { RockPaperScissors } from \"./rockPaperScissors/rockPaperScissors\";\nimport './App.css';\n\nconst App = () =>{\n  return(\n  <div>\n    <RockPaperScissors />\n  </div>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}